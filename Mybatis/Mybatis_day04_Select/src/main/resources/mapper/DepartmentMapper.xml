<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feng.mybatis.Dao.DepartmentMapper">
    <select id="getDeptById" resultType="com.feng.mybatis.Bean.Department">
        select id,dept_name departmentName from tbl_dept where id=#{id}
    </select>

    <!--
       场景二：查询部门的时候将对应的员工信息查出来
   -->
    <!--collection嵌套结果集的方式，定义关联的结合类型的元素的封装规则  -->
    <resultMap id="MyDept" type="com.feng.mybatis.Bean.Department">
        <id column="did" property="id"/>
        <result column="dept_name" property="departmentName"/>
        <!--
            collection定义关联集合类型的属性的封装规则
            ofType：指定集合里面元素的类型
        -->
        <collection property="employees" ofType="com.feng.mybatis.Bean.Employee">
            <!--定义这个集合中元素的封装规则-->
            <id column="eid" property="id"/>
            <result column="last_name" property="lastName"/>
            <result column="email" property="email"/>
            <result column="gender" property="gender"/>
        </collection>
    </resultMap>
    <select id="getDeptByIdPluus" resultMap="MyDept">
        select
          d.id did,d.dept_name dept_name,e.id eid,e.last_name last_name,e.email email,e.gender gender
        from tbl_dept d left join tbl_employee e
        on d.id=e.d_id
        where d.id=#{id}
    </select>

    <!--分步查询-->
    <resultMap id="MyDeptStep" type="com.feng.mybatis.Bean.Department">
        <id column="id" property="id"/>
        <id column="dept_name" property="departmentName"/>
        <collection property="employees" select="com.feng.mybatis.Dao.EmployeeMapper.getEmpByDeptId" column="{deptId=id}"
        fetchType="lazy"></collection>
    </resultMap>
    <select id="getDeptByIdStep" resultMap="MyDeptStep">
         select id,dept_name from tbl_dept where id=#{id}
    </select>

    <!--    扩展：多列的值传递过去：
        将多列的值封装map传递：column="{key1=column1,key2=column2}"
        fetchType:lazy：延迟;eager：立即
    -->
</mapper>